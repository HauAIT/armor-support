"use strict";

require("source-map-support/register");
var _helpers = require("./helpers");
describe('test logger', function () {
  let writers, log;
  before(function () {
    writers = (0, _helpers.setupWriters)();
    log = (0, _helpers.getDynamicLogger)(true);
  });
  after(function () {
    (0, _helpers.restoreWriters)(writers);
  });
  it('should contains levels', function () {
    log.levels.should.have.length.above(3);
    log.levels[2].should.equal('debug');
  });
  it('should unwrap', function () {
    log.unwrap.should.exist;
    log.unwrap().should.exist;
  });
  it('should rewrite npmlog levels during testing', function () {
    const text = 'hi';
    log.silly(text);
    log.verbose(text);
    log.info(text);
    log.http(text);
    log.warn(text);
    log.error(text);
    (() => {
      log.errorAndThrow(text);
    }).should.throw(text);
    (0, _helpers.assertOutputDoesntContain)(writers, text);
  });
});require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC9sb2dnZXIvbG9nZ2VyLXRlc3Qtc3BlY3MuanMiLCJuYW1lcyI6WyJfaGVscGVycyIsInJlcXVpcmUiLCJkZXNjcmliZSIsIndyaXRlcnMiLCJsb2ciLCJiZWZvcmUiLCJzZXR1cFdyaXRlcnMiLCJnZXREeW5hbWljTG9nZ2VyIiwiYWZ0ZXIiLCJyZXN0b3JlV3JpdGVycyIsIml0IiwibGV2ZWxzIiwic2hvdWxkIiwiaGF2ZSIsImxlbmd0aCIsImFib3ZlIiwiZXF1YWwiLCJ1bndyYXAiLCJleGlzdCIsInRleHQiLCJzaWxseSIsInZlcmJvc2UiLCJpbmZvIiwiaHR0cCIsIndhcm4iLCJlcnJvciIsImVycm9yQW5kVGhyb3ciLCJ0aHJvdyIsImFzc2VydE91dHB1dERvZXNudENvbnRhaW4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uIiwic291cmNlcyI6WyJ0ZXN0L2xvZ2dlci9sb2dnZXItdGVzdC1zcGVjcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0cmFuc3BpbGU6bW9jaGFcblxuaW1wb3J0IHsgZ2V0RHluYW1pY0xvZ2dlciwgcmVzdG9yZVdyaXRlcnMsIHNldHVwV3JpdGVycyxcbiAgICAgICAgIGFzc2VydE91dHB1dERvZXNudENvbnRhaW4gfSBmcm9tICcuL2hlbHBlcnMnO1xuXG5kZXNjcmliZSgndGVzdCBsb2dnZXInLCBmdW5jdGlvbiAoKSB7XG4gIGxldCB3cml0ZXJzLCBsb2c7XG4gIGJlZm9yZShmdW5jdGlvbiAoKSB7XG4gICAgd3JpdGVycyA9IHNldHVwV3JpdGVycygpO1xuICAgIGxvZyA9IGdldER5bmFtaWNMb2dnZXIodHJ1ZSk7XG4gIH0pO1xuXG4gIGFmdGVyKGZ1bmN0aW9uICgpIHtcbiAgICByZXN0b3JlV3JpdGVycyh3cml0ZXJzKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBjb250YWlucyBsZXZlbHMnLCBmdW5jdGlvbiAoKSB7XG4gICAgbG9nLmxldmVscy5zaG91bGQuaGF2ZS5sZW5ndGguYWJvdmUoMyk7XG4gICAgbG9nLmxldmVsc1syXS5zaG91bGQuZXF1YWwoJ2RlYnVnJyk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgdW53cmFwJywgZnVuY3Rpb24gKCkge1xuICAgIGxvZy51bndyYXAuc2hvdWxkLmV4aXN0O1xuICAgIGxvZy51bndyYXAoKS5zaG91bGQuZXhpc3Q7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgcmV3cml0ZSBucG1sb2cgbGV2ZWxzIGR1cmluZyB0ZXN0aW5nJywgZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHRleHQgPSAnaGknO1xuICAgIGxvZy5zaWxseSh0ZXh0KTtcbiAgICBsb2cudmVyYm9zZSh0ZXh0KTtcbiAgICBsb2cuaW5mbyh0ZXh0KTtcbiAgICBsb2cuaHR0cCh0ZXh0KTtcbiAgICBsb2cud2Fybih0ZXh0KTtcbiAgICBsb2cuZXJyb3IodGV4dCk7XG4gICAgKCgpID0+IHsgbG9nLmVycm9yQW5kVGhyb3codGV4dCk7IH0pLnNob3VsZC50aHJvdyh0ZXh0KTtcbiAgICBhc3NlcnRPdXRwdXREb2VzbnRDb250YWluKHdyaXRlcnMsIHRleHQpO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7QUFFQSxJQUFBQSxRQUFBLEdBQUFDLE9BQUE7QUFHQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxZQUFZO0VBQ2xDLElBQUlDLE9BQU8sRUFBRUMsR0FBRztFQUNoQkMsTUFBTSxDQUFDLFlBQVk7SUFDakJGLE9BQU8sR0FBRyxJQUFBRyxxQkFBWSxFQUFDLENBQUM7SUFDeEJGLEdBQUcsR0FBRyxJQUFBRyx5QkFBZ0IsRUFBQyxJQUFJLENBQUM7RUFDOUIsQ0FBQyxDQUFDO0VBRUZDLEtBQUssQ0FBQyxZQUFZO0lBQ2hCLElBQUFDLHVCQUFjLEVBQUNOLE9BQU8sQ0FBQztFQUN6QixDQUFDLENBQUM7RUFFRk8sRUFBRSxDQUFDLHdCQUF3QixFQUFFLFlBQVk7SUFDdkNOLEdBQUcsQ0FBQ08sTUFBTSxDQUFDQyxNQUFNLENBQUNDLElBQUksQ0FBQ0MsTUFBTSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3RDWCxHQUFHLENBQUNPLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsTUFBTSxDQUFDSSxLQUFLLENBQUMsT0FBTyxDQUFDO0VBQ3JDLENBQUMsQ0FBQztFQUVGTixFQUFFLENBQUMsZUFBZSxFQUFFLFlBQVk7SUFDOUJOLEdBQUcsQ0FBQ2EsTUFBTSxDQUFDTCxNQUFNLENBQUNNLEtBQUs7SUFDdkJkLEdBQUcsQ0FBQ2EsTUFBTSxDQUFDLENBQUMsQ0FBQ0wsTUFBTSxDQUFDTSxLQUFLO0VBQzNCLENBQUMsQ0FBQztFQUVGUixFQUFFLENBQUMsNkNBQTZDLEVBQUUsWUFBWTtJQUM1RCxNQUFNUyxJQUFJLEdBQUcsSUFBSTtJQUNqQmYsR0FBRyxDQUFDZ0IsS0FBSyxDQUFDRCxJQUFJLENBQUM7SUFDZmYsR0FBRyxDQUFDaUIsT0FBTyxDQUFDRixJQUFJLENBQUM7SUFDakJmLEdBQUcsQ0FBQ2tCLElBQUksQ0FBQ0gsSUFBSSxDQUFDO0lBQ2RmLEdBQUcsQ0FBQ21CLElBQUksQ0FBQ0osSUFBSSxDQUFDO0lBQ2RmLEdBQUcsQ0FBQ29CLElBQUksQ0FBQ0wsSUFBSSxDQUFDO0lBQ2RmLEdBQUcsQ0FBQ3FCLEtBQUssQ0FBQ04sSUFBSSxDQUFDO0lBQ2YsQ0FBQyxNQUFNO01BQUVmLEdBQUcsQ0FBQ3NCLGFBQWEsQ0FBQ1AsSUFBSSxDQUFDO0lBQUUsQ0FBQyxFQUFFUCxNQUFNLENBQUNlLEtBQUssQ0FBQ1IsSUFBSSxDQUFDO0lBQ3ZELElBQUFTLGtDQUF5QixFQUFDekIsT0FBTyxFQUFFZ0IsSUFBSSxDQUFDO0VBQzFDLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9
